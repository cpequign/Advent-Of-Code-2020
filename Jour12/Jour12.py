import numpy as npwith open("Jour12.txt","r") as f:    val = [ligne.split("\n")[0] for ligne in f]    R = np.array([[0,1],[-1,0]])L = -R#Let's work here with some matrix that will give us the position.#East = (1,0) West = (-1,0) North = (0,1) South = (0,-1)    def part1():    D = np.array([[1],[0]])    P = [0,0]    for l in val:        if l[0] == 'F':            P[0] += D[0]*int(l[1:])            P[1] += D[1]*int(l[1:])        elif l[0] == 'R':            q = int(l[1:]) // 90            for i in range(q):                D = R.dot(D)        elif l[0] == 'L':            q = int(l[1:]) // 90            for i in range(q):                D = L.dot(D)        elif l[0] == 'E':            P[0] += int(l[1:])        elif l[0] == 'S':            P[1] -= int(l[1:])        elif l[0] == 'N':            P[1] += int(l[1:])        elif l[0] == 'W':            P[0] -= int(l[1:])                print(P)    Md = abs(P[0]) + abs(P[1])    MD = int(Md)    print(MD)    return(None)part1()    def part2():    D = np.array([[1],[0]])    P = [0,0]    Wp = np.array([[10],[1]])    for l in val:        if l[0] == 'F':            P[0] += Wp[0]*int(l[1:])            P[1] += Wp[1]*int(l[1:])        elif l[0] == 'R':            q = int(l[1:]) // 90            for i in range(q):                D = R.dot(D)                Wp = R.dot(Wp)        elif l[0] == 'L':            q = int(l[1:]) // 90            for i in range(q):                D = L.dot(D)                Wp = L.dot(Wp)        elif l[0] == 'E':            Wp[0] += int(l[1:])        elif l[0] == 'S':            Wp[1] -= int(l[1:])        elif l[0] == 'N':            Wp[1] += int(l[1:])        elif l[0] == 'W':            Wp[0] -= int(l[1:])                print(P)    Md = abs(P[0]) + abs(P[1])    MD = int(Md)    print(MD)    return(None)part2()